import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import ParseMode, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext


BOT_TOKEN = '–¢–≤–æ–π —Ç–æ–∫–µ–Ω'

bot = Bot(token=BOT_TOKEN,parse_mode=types.ParseMode.HTML)
storage = MemoryStorage()
dp=Dispatcher(bot, storage=storage)
logging.basicConfig(level=logging.INFO)

class newNabor(StatesGroup):
    naborName = State()
    oneSticker = State()


class FsmToAdmin(StatesGroup):
    messageToAdmin = State()

adminid = 6271073561

@dp.message_handler(commands=['start'])
async def process_start_command(message:types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Çüëã\n–Ø –±–æ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –º–æ–∂–µ—à—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å üëÄ")


@dp.message_handler(commands=['help'])
async def helpMessage(message: types.Message):
    await message.answer('–ß—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞–∫–∞–ª—è–∫–∞–µ—à—å', reply_markup=kb1)


@dp.callback_query_handler(text='drugoe')
async def get_menu0(call: types.CallbackQuery):
    await call.answer(cache_time=2)
    await call.message.edit_text(text='–ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –±–∞–≥ –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ(—Ä–µ–∫–ª–∞–º–∞ —Ç–æ–∂–µ) —Ç–æ –ø–∏—à–∏—Ç–µ –Ω–∏–∂–µüëá', reply_markup=helpkb)


@dp.callback_query_handler(text='reklama', state=None)
async def kateg(message: types.Message, state: FSMContext):
    await bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç—É –û–î–ù–ò–ú –°–û–û–ë–©–ï–ù–ò–ï–ú, –≤ —Å–ª—É—á–∞–µ —Å–æ–≥–ª–∞—Å–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ —Ç–∞–∫ –∂–µ, —á–µ—Ä–µ–∑ –±–æ—Ç–∞. –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –¢–µ–ª–µ–≥—Ä–∞–º. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:')
    await FsmToAdmin.messageToAdmin.set()

@dp.callback_query_handler(text='dobavit nabor', state=None)
async def newnabor(message: types.Message, state: FSMContext):
    await bot.send_message(message.from_user.id,'–ù–∞–ø–∏—à–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–∞–Ω–Ω–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞(–î–∞–∂–µ –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç):')
    await newNabor.naborName.set()


@dp.message_handler(content_types=['text'], state=newNabor.naborName)
async def loadNabor(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
    await message.answer('–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∞–º —Å—Ç–∏–∫–µ—Ä')
    await newNabor.next()


@dp.message_handler(content_types=['sticker'], state=newNabor.oneSticker)
async def loadSticker(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await bot.send_message(5722409799, text=data['name'])
    await bot.send_sticker(5722409799, sticker=message.sticker.file_id)
    await state.finish()
@dp.message_handler(content_types=['photo', 'video', 'file', 'text', 'mediagroup'], state=FsmToAdmin.messageToAdmin)
async def zxc(message: types.Message, state: FSMContext):
    await bot.forward_message(message.chat.id, 5722409799, message.message_id)
    await state.finish()





kb1 = InlineKeyboardMarkup()
    
kb1.add(InlineKeyboardButton('üì≤–°—Ç–∏–∫–µ—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='ctikeri po kategoriyam'))

kb1.add(InlineKeyboardButton('‚öô–î—Ä—É–≥–æ–µ', callback_data='drugoe'))

helpkb = InlineKeyboardMarkup()

helpkb.add(InlineKeyboardButton(callback_data='reklama', text='–†–µ–∫–ª–∞–º–∞|–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')).add(InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–∞–±–æ—Ä", callback_data='dobavit nabor'))


if __name__ == "__main__":
    executor.start_polling(dp,skip_updates=True)